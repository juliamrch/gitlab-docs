###############################################
#    Job configuration rules and defaults     #
###############################################

default:
  image: registry.gitlab.com/gitlab-org/gitlab-docs/base:alpine-3.18-ruby-3.2.2-08fa6df8
  tags:
    - gitlab-org

.bundle:
  before_script:
    - ruby --version
    - gem --version
    - bundle --version
    - bundle config set --local path 'vendor/bundle'  # Install dependencies into ./vendor/bundle
    - bundle install
  cache:
    key:
      files:
        - Gemfile.lock
    paths:
      - vendor/bundle

.bundle_and_yarn:
  before_script:
    - ruby --version
    - gem --version
    - bundle --version
    - bundle config set --local path 'vendor/bundle'  # Install dependencies into ./vendor/bundle
    - bundle install
    - node --version
    - yarn set version 4.1.0
    - yarn --version
    - yarn install --immutable
  cache:
    key:
      files:
        - Gemfile.lock
        - yarn.lock
    paths:
      - vendor/bundle
      - ~/.yarn/berry/cache

.yarn:
  before_script:
    - node --version
    - yarn set version 4.1.0
    - yarn --version
    - yarn install --immutable
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - ~/.yarn/berry/cache

#
# Retry a job automatically if it fails (2 times)
#
.retry:
  retry: 2

#
# Rules to determine which pipelines jobs will run in.
# The DOCS_PROJECT_PIPELINE_TYPE variable names are defined
# in .gitlab-ci.yml under workflow:rules.
#

.rules_docker_images:
  rules:
    - if: '$DOCS_PROJECT_PIPELINE_TYPE == "Build docker images pipeline"'
      when: manual
      allow_failure: true

.rules_docker_image_tests:
  rules:
    - if: '$DOCS_PROJECT_PIPELINE_TYPE == "Build docker images pipeline"'
    - if: '$DOCS_PROJECT_PIPELINE_TYPE =~ /^MR pipeline.*/'
      changes:
        - $DOCKERFILE

.rules_docker_single_images:
  rules:
    - if: '$DOCS_PROJECT_PIPELINE_TYPE == "Stable branch pipeline"'

.rules_docker_single_images_tests:
  rules:
    - if: '$DOCS_PROJECT_PIPELINE_TYPE == "Stable branch pipeline"'
    - if: '$DOCS_PROJECT_PIPELINE_TYPE =~ /^MR pipeline.*/'
      changes:
        - $DOCKERFILE

.rules_chores:
  rules:
    - if: '$DOCS_PROJECT_PIPELINE_TYPE == "Cleanup chores pipeline"'
      when: manual
      allow_failure: true

.rules_site_tests:
  rules:
    - if: '$DOCS_PROJECT_PIPELINE_TYPE == "Hourly site deployment pipeline"'
    - if: '$DOCS_PROJECT_PIPELINE_TYPE =~ /^MR pipeline.*/'
    - if: '$DOCS_PROJECT_PIPELINE_TYPE == "Default branch pipeline"'
    - if: '$DOCS_PROJECT_PIPELINE_TYPE == "Stable branch pipeline"'

.rules_prod:
  rules:
    - if: '$DOCS_PROJECT_PIPELINE_TYPE == "Hourly site deployment pipeline"'
    - if: '$DOCS_PROJECT_PIPELINE_TYPE == "Default branch pipeline"'
    - if: '$DOCS_PROJECT_PIPELINE_TYPE == "Stable branch pipeline"'

.rules_dev:
  rules:
    - if: '$DOCS_PROJECT_PIPELINE_TYPE =~ /^MR pipeline.*/'
    - if: '$DOCS_PROJECT_PIPELINE_TYPE == "Cleanup chores pipeline"'

.rules_upstream_review_app:
  rules:
    - if: '$DOCS_PROJECT_PIPELINE_TYPE == "Upstream review app pipeline"'

.rules_pages:
  rules:
    - if: '$DOCS_PROJECT_PIPELINE_TYPE == "Hourly site deployment pipeline"'
    - if: '$DOCS_PROJECT_PIPELINE_TYPE == "Default branch pipeline"'
