############################
#
# Image the contains the dependencies to run the lints.
# It downloads the gitlab-docs repository based on the
# branch the Docker image is invoked from.
# Based on Alpine.
#
############################

# Install vale
# We need to build it from source, see https://github.com/errata-ai/vale/issues/128
FROM golang:alpine AS builder

ENV VALE_VERSION=1.7.1

RUN apk add --no-cache wget zip tar make && \
    wget https://github.com/errata-ai/vale/archive/v${VALE_VERSION}.tar.gz && \
    tar -xvzf v${VALE_VERSION}.tar.gz && \
    cd vale-${VALE_VERSION} && \
    make && \
    mv bin/vale /vale

FROM registry.gitlab.com/gitlab-org/gitlab-docs:base
MAINTAINER GitLab Documentation Team

# Set up needed environment variables that are called with --build-arg when
# the Docker image is built (see .gitlab-ci.yml).
ARG CI_COMMIT_REF_NAME
# If CI_COMMIT_REF_NAME is not set (local development), set it to master
ENV CI_COMMIT_REF_NAME ${CI_COMMIT_REF_NAME:-master}

WORKDIR /tmp

RUN yarn global add markdownlint-cli && yarn cache clean

RUN wget https://gitlab.com/gitlab-org/gitlab-docs/-/archive/$CI_COMMIT_REF_NAME/gitlab-docs-$CI_COMMIT_REF_NAME.tar.bz2 \
  && tar xvjf gitlab-docs-$CI_COMMIT_REF_NAME.tar.bz2 \
  && mv gitlab-docs-$CI_COMMIT_REF_NAME gitlab-docs \
  && rm gitlab-docs-$CI_COMMIT_REF_NAME.tar.bz2

RUN cd gitlab-docs \
  && NOKOGIRI_USE_SYSTEM_LIBRARIES=1 bundle install --jobs 4

COPY --from=builder /vale /usr/local/bin/vale
